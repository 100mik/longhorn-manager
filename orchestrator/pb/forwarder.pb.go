// Code generated by protoc-gen-go. DO NOT EDIT.
// source: forwarder.proto

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	forwarder.proto

It has these top-level messages:
	InstanceOperationRequest
	InstanceOperationResponse
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type InstanceOperationRequest struct {
	Type         string   `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	NodeID       string   `protobuf:"bytes,2,opt,name=nodeID" json:"nodeID,omitempty"`
	InstanceID   string   `protobuf:"bytes,3,opt,name=instanceID" json:"instanceID,omitempty"`
	InstanceName string   `protobuf:"bytes,4,opt,name=instanceName" json:"instanceName,omitempty"`
	VolumeName   string   `protobuf:"bytes,5,opt,name=volumeName" json:"volumeName,omitempty"`
	VolumeSize   int64    `protobuf:"varint,6,opt,name=volumeSize" json:"volumeSize,omitempty"`
	ReplicaURLs  []string `protobuf:"bytes,7,rep,name=replicaURLs" json:"replicaURLs,omitempty"`
}

func (m *InstanceOperationRequest) Reset()                    { *m = InstanceOperationRequest{} }
func (m *InstanceOperationRequest) String() string            { return proto.CompactTextString(m) }
func (*InstanceOperationRequest) ProtoMessage()               {}
func (*InstanceOperationRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *InstanceOperationRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *InstanceOperationRequest) GetNodeID() string {
	if m != nil {
		return m.NodeID
	}
	return ""
}

func (m *InstanceOperationRequest) GetInstanceID() string {
	if m != nil {
		return m.InstanceID
	}
	return ""
}

func (m *InstanceOperationRequest) GetInstanceName() string {
	if m != nil {
		return m.InstanceName
	}
	return ""
}

func (m *InstanceOperationRequest) GetVolumeName() string {
	if m != nil {
		return m.VolumeName
	}
	return ""
}

func (m *InstanceOperationRequest) GetVolumeSize() int64 {
	if m != nil {
		return m.VolumeSize
	}
	return 0
}

func (m *InstanceOperationRequest) GetReplicaURLs() []string {
	if m != nil {
		return m.ReplicaURLs
	}
	return nil
}

type InstanceOperationResponse struct {
	InstanceID   string `protobuf:"bytes,1,opt,name=instanceID" json:"instanceID,omitempty"`
	InstanceName string `protobuf:"bytes,2,opt,name=instanceName" json:"instanceName,omitempty"`
	Running      bool   `protobuf:"varint,3,opt,name=running" json:"running,omitempty"`
	Ip           string `protobuf:"bytes,4,opt,name=ip" json:"ip,omitempty"`
	NodeID       string `protobuf:"bytes,5,opt,name=nodeID" json:"nodeID,omitempty"`
}

func (m *InstanceOperationResponse) Reset()                    { *m = InstanceOperationResponse{} }
func (m *InstanceOperationResponse) String() string            { return proto.CompactTextString(m) }
func (*InstanceOperationResponse) ProtoMessage()               {}
func (*InstanceOperationResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *InstanceOperationResponse) GetInstanceID() string {
	if m != nil {
		return m.InstanceID
	}
	return ""
}

func (m *InstanceOperationResponse) GetInstanceName() string {
	if m != nil {
		return m.InstanceName
	}
	return ""
}

func (m *InstanceOperationResponse) GetRunning() bool {
	if m != nil {
		return m.Running
	}
	return false
}

func (m *InstanceOperationResponse) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *InstanceOperationResponse) GetNodeID() string {
	if m != nil {
		return m.NodeID
	}
	return ""
}

func init() {
	proto.RegisterType((*InstanceOperationRequest)(nil), "pb.InstanceOperationRequest")
	proto.RegisterType((*InstanceOperationResponse)(nil), "pb.InstanceOperationResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Forwarder service

type ForwarderClient interface {
	InstanceOperationRPC(ctx context.Context, in *InstanceOperationRequest, opts ...grpc.CallOption) (*InstanceOperationResponse, error)
}

type forwarderClient struct {
	cc *grpc.ClientConn
}

func NewForwarderClient(cc *grpc.ClientConn) ForwarderClient {
	return &forwarderClient{cc}
}

func (c *forwarderClient) InstanceOperationRPC(ctx context.Context, in *InstanceOperationRequest, opts ...grpc.CallOption) (*InstanceOperationResponse, error) {
	out := new(InstanceOperationResponse)
	err := grpc.Invoke(ctx, "/pb.Forwarder/InstanceOperationRPC", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Forwarder service

type ForwarderServer interface {
	InstanceOperationRPC(context.Context, *InstanceOperationRequest) (*InstanceOperationResponse, error)
}

func RegisterForwarderServer(s *grpc.Server, srv ForwarderServer) {
	s.RegisterService(&_Forwarder_serviceDesc, srv)
}

func _Forwarder_InstanceOperationRPC_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InstanceOperationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ForwarderServer).InstanceOperationRPC(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Forwarder/InstanceOperationRPC",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ForwarderServer).InstanceOperationRPC(ctx, req.(*InstanceOperationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Forwarder_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Forwarder",
	HandlerType: (*ForwarderServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "InstanceOperationRPC",
			Handler:    _Forwarder_InstanceOperationRPC_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "forwarder.proto",
}

func init() { proto.RegisterFile("forwarder.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 280 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x92, 0x51, 0x4a, 0xf3, 0x40,
	0x10, 0xc7, 0xbf, 0x4d, 0xda, 0xf4, 0xcb, 0x28, 0x0a, 0x83, 0xc8, 0x2a, 0x2a, 0x21, 0x4f, 0x79,
	0xca, 0x83, 0x1e, 0xc1, 0x22, 0x04, 0x44, 0x65, 0xa5, 0x07, 0x48, 0xda, 0x51, 0x16, 0xda, 0xdd,
	0x75, 0x93, 0x28, 0x7a, 0x1b, 0xef, 0xe7, 0x21, 0xc4, 0x4d, 0x42, 0x57, 0x6d, 0xf1, 0x2d, 0xf3,
	0x9b, 0x61, 0xc8, 0xef, 0x3f, 0x0b, 0xfb, 0x0f, 0xda, 0xbe, 0x94, 0x76, 0x41, 0x36, 0x37, 0x56,
	0x37, 0x1a, 0x03, 0x53, 0xa5, 0x1f, 0x0c, 0x78, 0xa1, 0xea, 0xa6, 0x54, 0x73, 0xba, 0x35, 0x64,
	0xcb, 0x46, 0x6a, 0x25, 0xe8, 0xa9, 0xa5, 0xba, 0x41, 0x84, 0x51, 0xf3, 0x6a, 0x88, 0xb3, 0x84,
	0x65, 0xb1, 0x70, 0xdf, 0x78, 0x08, 0x91, 0xd2, 0x0b, 0x2a, 0xa6, 0x3c, 0x70, 0xb4, 0xaf, 0xf0,
	0x0c, 0x40, 0xf6, 0x7b, 0x8a, 0x29, 0x0f, 0x5d, 0xcf, 0x23, 0x98, 0xc2, 0xee, 0x50, 0xdd, 0x94,
	0x2b, 0xe2, 0x23, 0x37, 0xf1, 0x8d, 0x7d, 0xed, 0x78, 0xd6, 0xcb, 0x76, 0xd5, 0x4d, 0x8c, 0xbb,
	0x1d, 0x6b, 0xb2, 0xee, 0xdf, 0xcb, 0x37, 0xe2, 0x51, 0xc2, 0xb2, 0x50, 0x78, 0x04, 0x13, 0xd8,
	0xb1, 0x64, 0x96, 0x72, 0x5e, 0xce, 0xc4, 0x75, 0xcd, 0x27, 0x49, 0x98, 0xc5, 0xc2, 0x47, 0xe9,
	0x3b, 0x83, 0xa3, 0x0d, 0xba, 0xb5, 0xd1, 0xaa, 0xa6, 0x1f, 0x0e, 0xec, 0x4f, 0x87, 0x60, 0x83,
	0x03, 0x87, 0x89, 0x6d, 0x95, 0x92, 0xea, 0xd1, 0x85, 0xf0, 0x5f, 0x0c, 0x25, 0xee, 0x41, 0x20,
	0x4d, 0xef, 0x1d, 0x48, 0xe3, 0x25, 0x39, 0xf6, 0x93, 0x3c, 0xaf, 0x20, 0xbe, 0x1a, 0x2e, 0x85,
	0x33, 0x38, 0xf8, 0xfd, 0xbf, 0x77, 0x97, 0x78, 0x92, 0x9b, 0x2a, 0xdf, 0x76, 0xb8, 0xe3, 0xd3,
	0x2d, 0xdd, 0xce, 0x33, 0xfd, 0x57, 0x45, 0xee, 0x05, 0x5c, 0x7c, 0x06, 0x00, 0x00, 0xff, 0xff,
	0xe8, 0xbc, 0xc9, 0x03, 0x14, 0x02, 0x00, 0x00,
}
